---
- name: "Configure system"
  tags:
    - provision
  become: yes
  block:
    - import_tasks: "tasks/reduce_privileged_ports.yml"
    - name: "Create '{{service_user}}' user for running services"
      user:
        name: "{{service_user}}"
        group: "{{service_group}}"
- name: "Create service config and data directories"
  tags:
    - deploy
  become: yes
  file:
    path: "{{item}}"
    state: directory
    owner: root
    group: root
    recurse: yes
    # TODO re-enable these ownerships when using rootless podman
    # owner: "{{service_user}}"
    # group: "{{service_group}}"
  loop:
    - "{{host_data_dir}}/caddy/certs"
    - "{{host_data_dir}}/caddy/certs/acme/acme-v02.api.letsencrypt.org/sites/stats.ijj.li"
    - "{{host_data_dir}}/caddy/logs"
    - "{{host_data_dir}}/caddy/srv"
    # - "{{host_data_dir}}/goaccess/geoip"
    # - "{{host_data_dir}}/goaccess/report"
- name: "Configure services"
  tags:
    - deploy
    - update
  become: yes
  block:
    - name: "Copy Caddy configuration"
      template:
        src: "Caddyfile"
        dest: "{{host_config_dir}}/caddy/"
        owner: root
        group: root
        # TODO re-enable these ownerships when using rootless podman
        # owner: "{{service_user}}"
        # group: "{{service_group}}"
        #validate: "podman run --rm -v %s:/etc/Caddyfile quay.io/indeliblesoftware/caddy -conf /etc/Caddyfile -validate"
    # - name: "Copy GoAccess configuration"
    #   copy:
    #     src: "goaccess.conf"
    #     dest: "{{host_config_dir}}/goaccess/"
    #     owner: root
    #     group: root
    #     # TODO re-enable these ownerships when using rootless podman
    #     # owner: "{{service_user}}"
    #     # group: "{{service_group}}"
    # - name: "Copy GoAccess GeoIP database"
    #   copy:
    #     src: "GeoLite2-City.mmdb"
    #     dest: "{{host_data_dir}}/goaccess/geoip/"
    #     owner: root
    #     group: root
    #     # TODO re-enable these ownerships when using rootless podman
    #     # owner: "{{service_user}}"
    #     # group: "{{service_group}}"
- name: "Deploy services"
  block:
    - name: "Create web pod"
      import_role:
        name: podman
      vars:
        user: "{{service_user}}"
        group: "{{service_group}}"
        pod_name: web
        #pod_create_args: -p 80:8080 -p 443:8443 -p 7890:7890
        pod_create_args: -p 80:8080 -p 443:8443
        pod_uid: "1"
        pod_gid: "1"
        pod_containers:
          - name: caddy
            image: quay.io/indeliblesoftware/caddy
            default_user: true
            run_args:
              "\
              --ulimit nofile=16384 \
              -v {{host_config_dir}}/caddy/Caddyfile:/etc/Caddyfile:ro \
              -v {{host_data_dir}}/caddy/certs:/etc/ssl/caddy \
              -v {{host_data_dir}}/caddy/logs:/var/log/caddy \
              -v {{host_data_dir}}/caddy/srv:/srv"
              # -v {{host_data_dir}}/goaccess/report:/srv/static/stats.ijj.li:ro"
            cmd_args: -agree
          # - name: goaccess
          #   image: docker.io/allinurl/goaccess
          #   run_args: "\
          #     -v {{host_config_dir}}/goaccess:/srv/data \
          #     -v {{host_data_dir}}/goaccess/geoip:/srv/geoip \
          #     -v {{host_data_dir}}/goaccess/report:/srv/report \
          #     -v {{host_data_dir}}/caddy/certs/acme/acme-v02.api.letsencrypt.org/sites/stats.ijj.li:/srv/certs:ro
          #     -v {{host_data_dir}}/caddy/logs:/srv/logs:ro"
          #   cmd_args: --config-file=/srv/data/goaccess.conf
        host_mounts:
          - "{{host_config_dir}}/caddy"
          - "{{host_data_dir}}/caddy"
          # - "{{host_config_dir}}/goaccess"
          # - "{{host_data_dir}}/goaccess"
        expose_ports:
          - 80/tcp
          - 443/tcp
          # - 7890/tcp
